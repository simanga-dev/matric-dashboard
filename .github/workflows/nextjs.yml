name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install bun
        run: npm install -g bun

      - name: Install dependencies
        run: bun install

      - name: setup varialbe
        run: |
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
            echo "MEILI_URL=${{ secrets.MEILI_URL }}" >> .env
            echo "MEILI_TOKEN=${{ secrets.MEILI_TOKEN }}" >> .env

      - name: Run lint
        run: bun run lint

      - name: Run Build
        run: bun run build

  build-and-push-image:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: setup varialbe
        run: |
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
            echo "MEILI_URL=${{ secrets.MEILI_URL }}" >> .env
            echo "MEILI_TOKEN=${{ secrets.MEILI_TOKEN }}" >> .env

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/simanga-dev/matric-dashboard:latest
            ghcr.io/simanga-dev/matric-dashboard:${{ github.sha }}

  deploy:
      if: github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      needs:
        - build-and-push-image
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: create env file
          run: |
            echo "GIT_COMMIT_HASH=${{ github.sha }}" >> ./envfile

        # - name: Remove existing Docker network (if any)
        #   uses: appleboy/ssh-action@v1.0.3
        #   with:
        #     host: ${{ secrets.HOST }}
        #     username: debloy
        #     key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
        #     script: |
        #       docker network inspect matric-dashboard_default &>/dev/null && \
        #         docker network rm matric-dashboard_default || true

        - name: Docker Stack Deploy
          uses: cssnr/stack-deploy-action@v1
          with:
            name: matric-dashboard
            file: compose.prod.yaml
            host: ${{ secrets.HOST }}
            user: debloy
            ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
            env_file: ./envfile
